- name: Remove old conflicting Docker packages
  package:
    name:
      - docker
      - docker-client
      - docker-common
      - docker-engine
      - docker-io
    state: absent
  ignore_errors: yes

- name: Clean Yum metadata
  command: yum clean all

- name: Rebuild Yum cache
  command: yum makecache

- name: Clean all yum metadata
  command: yum clean metadata
  
- name: Ensure public DNS entries exist in /etc/resolv.conf
  lineinfile:
    path: /etc/resolv.conf
    line: "{{ item }}"
    state: present
    insertafter: EOF
  loop:
    - "nameserver 8.8.8.8"
    - "nameserver 8.8.4.4"
  
- name: Install required dependencies
  package:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present

- name: Add Docker CE repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: Install Docker CE and CLI
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin 
      - docker-compose-plugin
    state: present

- name: Start and enable Docker
  systemd:
    name: docker
    enabled: yes
    state: started

- name: Ensure docker-compose is installed
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  when: ansible_os_family != "Windows"

- name: Set current timestamp
  set_fact:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

- name: Check if postgresql_data_dir exists
  stat:
    path: "{{ postgresql_data_dir }}"
  register: postgres_dir_stat

- name: Rename existing postgresql_data_dir if it exists
  command: mv "{{ postgresql_data_dir }}" "{{ postgresql_data_dir }}_backup_{{ timestamp }}"
  when: postgres_dir_stat.stat.exists

- name: Create fresh postgresql_data_dir
  file:
    path: "{{ postgresql_data_dir }}"
    state: directory

- name: Check if Bitbucket directory exists
  stat:
    path: "{{ bitbucket_data_dir }}"
  register: bitbucket_dir_stat

- name: Rename existing bitbucket_data_dir if it exists
  command: mv "{{ bitbucket_data_dir }}" "{{ bitbucket_data_dir }}_backup_{{ timestamp }}"
  when: bitbucket_dir_stat.stat.exists

- name: Create Bitbucket directory
  file:
    path: "{{ bitbucket_data_dir }}"
    state: directory

- name: Copy docker-compose.yml template
  template:
    src: docker-compose.yml.j2
    dest: "{{ docker_compose_path }}/docker-compose.yml"

- name: restart docker-compose
  shell: |
    if docker ps --format '{% raw %}{{.Names}}{% endraw %}' | grep -qE '^(postgresql|bitbucket)$'; then
      echo "Containers running. Restarting...";
      /usr/local/bin/docker-compose down && /usr/local/bin/docker-compose up -d
    else
      echo "Containers not running. Starting fresh...";
      /usr/local/bin/docker-compose up -d
    fi
  args:
    chdir: "{{ docker_compose_path }}"
